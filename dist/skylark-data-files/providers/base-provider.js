/**
 * skylark-data-files - The skylark file system library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["skylark-langx-binary/buffer","skylark-langx-paths","../files","../error-codes","../file-error","../action-type","../file-flag","../utils"],function(n,t,e,i,r,c,s,o){"use strict";const{fail:l}=o;return e.providers.BaseProvider=class{supportsLinks(){return!1}diskSpace(n,t){t(0,0)}openFile(n,t,e){throw new r(i.ENOTSUP)}createFile(n,t,e,c){throw new r(i.ENOTSUP)}open(n,e,s,o){this.stat(n,!1,(a,S)=>{if(a)switch(e.pathNotExistsAction()){case c.CREATE_FILE:return this.stat(t.dirname(n),!1,(i,c)=>{i?o(i):c&&!c.isDirectory()?o(r.ENOTDIR(t.dirname(n))):this.createFile(n,e,s,o)});case c.THROW_EXCEPTION:return o(r.ENOENT(n));default:return o(new r(i.EINVAL,"Invalid FileFlag object."))}else{if(S&&S.isDirectory())return o(r.EISDIR(n));switch(e.pathExistsAction()){case c.THROW_EXCEPTION:return o(r.EEXIST(n));case c.TRUNCATE_FILE:return this.openFile(n,e,(n,t)=>{n?o(n):t?t.truncate(0,()=>{t.sync(()=>{o(null,t)})}):l()});case c.NOP:return this.openFile(n,e,o);default:return o(new r(i.EINVAL,"Invalid FileFlag object."))}}})}rename(n,t,e){e(new r(i.ENOTSUP))}renameSync(n,t){throw new r(i.ENOTSUP)}stat(n,t,e){e(new r(i.ENOTSUP))}statSync(n,t){throw new r(i.ENOTSUP)}openFileSync(n,t,e){throw new r(i.ENOTSUP)}createFileSync(n,t,e){throw new r(i.ENOTSUP)}openSync(n,e,s){let o;try{o=this.statSync(n,!1)}catch(o){switch(e.pathNotExistsAction()){case c.CREATE_FILE:if(!this.statSync(t.dirname(n),!1).isDirectory())throw r.ENOTDIR(t.dirname(n));return this.createFileSync(n,e,s);case c.THROW_EXCEPTION:throw r.ENOENT(n);default:throw new r(i.EINVAL,"Invalid FileFlag object.")}}if(o.isDirectory())throw r.EISDIR(n);switch(e.pathExistsAction()){case c.THROW_EXCEPTION:throw r.EEXIST(n);case c.TRUNCATE_FILE:return this.unlinkSync(n),this.createFileSync(n,e,o.mode);case c.NOP:return this.openFileSync(n,e,s);default:throw new r(i.EINVAL,"Invalid FileFlag object.")}}unlink(n,t){t(new r(i.ENOTSUP))}unlinkSync(n){throw new r(i.ENOTSUP)}rmdir(n,t){t(new r(i.ENOTSUP))}rmdirSync(n){throw new r(i.ENOTSUP)}mkdir(n,t,e){e(new r(i.ENOTSUP))}mkdirSync(n,t){throw new r(i.ENOTSUP)}readdir(n,t){t(new r(i.ENOTSUP))}readdirSync(n){throw new r(i.ENOTSUP)}exists(n,t){this.stat(n,null,function(n){t(!n)})}existsSync(n){try{return this.statSync(n,!0),!0}catch(n){return!1}}realpath(n,e,i){if(this.supportsLinks()){const e=n.split(t.sep);for(let n=0;n<e.length;n++){const i=e.slice(0,n+1);e[n]=t.join.apply(null,i)}}else this.exists(n,function(t){t?i(null,n):i(r.ENOENT(n))})}realpathSync(n,e){if(this.supportsLinks()){const e=n.split(t.sep);for(let n=0;n<e.length;n++){const i=e.slice(0,n+1);e[n]=t.join.apply(path,i)}return e.join(t.sep)}if(this.existsSync(n))return n;throw r.ENOENT(n)}truncate(n,t,e){this.open(n,s.getFileFlag("r+"),420,function(n,i){if(n)return e(n);i.truncate(t,function(n){i.close(function(t){e(n||t)})})})}truncateSync(n,t){const e=this.openSync(n,s.getFileFlag("r+"),420);try{e.truncateSync(t)}catch(n){throw n}finally{e.closeSync()}}readFile(t,e,i,r){const c=r;this.open(t,i,420,(t,i)=>{if(t)return r(t);r=function(n,t){i.close(function(e){return n||(n=e),c(n,t)})},i.stat((t,c)=>{if(t)return r(t);const s=n.alloc(c.size);i.read(s,0,c.size,0,n=>{if(n)return r(n);if(null===e)return r(n,s);try{r(null,s.toString(e))}catch(n){r(n)}})})})}readFileSync(t,e,i){const r=this.openSync(t,i,420);try{const t=r.statSync(),i=n.alloc(t.size);return r.readSync(i,0,t.size,0),r.closeSync(),null===e?i:i.toString(e)}finally{r.closeSync()}}writeFile(t,e,i,r,c,s){const o=s;this.open(t,r,420,function(t,r){if(t)return s(t);s=function(n){r.close(function(t){o(n||t)})};try{"string"==typeof e&&(e=n.from(e,i))}catch(n){return s(n)}r.write(e,0,e.length,0,s)})}writeFileSync(t,e,i,r,c){const s=this.openSync(t,r,c);try{"string"==typeof e&&(e=n.from(e,i)),s.writeSync(e,0,e.length,0)}finally{s.closeSync()}}appendFile(t,e,i,r,c,s){const o=s;this.open(t,r,c,function(t,r){if(t)return s(t);s=function(n){r.close(function(t){o(n||t)})},"string"==typeof e&&(e=n.from(e,i)),r.write(e,0,e.length,null,s)})}appendFileSync(t,e,i,r,c){const s=this.openSync(t,r,c);try{"string"==typeof e&&(e=n.from(e,i)),s.writeSync(e,0,e.length,null)}finally{s.closeSync()}}chmod(n,t,e,c){c(new r(i.ENOTSUP))}chmodSync(n,t,e){throw new r(i.ENOTSUP)}chown(n,t,e,c,s){s(new r(i.ENOTSUP))}chownSync(n,t,e,c){throw new r(i.ENOTSUP)}utimes(n,t,e,c){c(new r(i.ENOTSUP))}utimesSync(n,t,e){throw new r(i.ENOTSUP)}link(n,t,e){e(new r(i.ENOTSUP))}linkSync(n,t){throw new r(i.ENOTSUP)}symlink(n,t,e,c){c(new r(i.ENOTSUP))}symlinkSync(n,t,e){throw new r(i.ENOTSUP)}readlink(n,t){t(new r(i.ENOTSUP))}readlinkSync(n){throw new r(i.ENOTSUP)}}});
//# sourceMappingURL=../sourcemaps/providers/base-provider.js.map
