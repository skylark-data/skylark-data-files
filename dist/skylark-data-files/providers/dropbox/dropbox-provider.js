/**
 * skylark-data-files - The skylark file system library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["skylark-langx-funcs/defer","skylark-langx-binary/buffer","skylark-langx-paths","../base-provider","../../stats","../../file-type","../../file-error","../../error-codes","../../utils","../../dropbox-file"],function(e,t,r,s,a,n,o,i,c,l){"use strict";const{arrayBuffer2Buffer:h,buffer2ArrayBuffer:u}=c,{dirname:f}=r;function p(e){return"/"===e?"":e}function _(e){const t=e.error;if(t[".tag"])return t;if(t.error){const e=t.error;return e[".tag"]?e:e.reason&&e.reason[".tag"]?e.reason:e}if("string"==typeof t)try{const r=JSON.parse(t);if(r.error&&r.error.reason&&r.error.reason[".tag"])return r.error.reason}catch(e){}return t}function d(e){if(e.user_message)return e.user_message.text;if(e.error_summary)return e.error_summary;if("string"==typeof e.error)return e.error;if("object"==typeof e.error)return d(e.error);throw new Error(`Dropbox's servers gave us a garbage error message: ${JSON.stringify(e)}`)}function w(e,t,r){switch(e[".tag"]){case"malformed_path":return new o(i.EBADF,r,t);case"not_found":return o.ENOENT(t);case"not_file":return o.EISDIR(t);case"not_folder":return o.ENOTDIR(t);case"restricted_content":return o.EPERM(t);case"other":default:return new o(i.EIO,r,t)}}function m(e,t,r){switch(e[".tag"]){case"malformed_path":case"disallowed_name":return new o(i.EBADF,r,t);case"conflict":case"no_write_permission":case"team_folder":return o.EPERM(t);case"insufficient_space":return new o(i.ENOSPC,r);case"other":default:return new o(i.EIO,r,t)}}function y(e,t,r){const s={path:p(t)};e.filesDeleteV2(s).then(()=>{r()}).catch(s=>{const a=_(s);switch(a[".tag"]){case"path_lookup":r(w(a.path_lookup,t,d(s)));break;case"path_write":r(m(a.path_write,t,d(s)));break;case"too_many_write_operations":setTimeout(()=>y(e,t,r),500+300*Math.random());break;case"other":default:r(new o(i.EIO,d(s),t))}})}class l extends PreloadFile{constructor(e,t,r,s,a){super(e,t,r,s,a)}sync(e){this._fs._syncFile(this.getPath(),this.getBuffer(),e)}close(e){this.sync(e)}}class E extends s{constructor(e){super(),this._client=e}static Create(e,t){t(null,new E(e.client))}static isAvailable(){return"undefined"!=typeof Dropbox}getName(){return E.Name}isReadOnly(){return!1}supportsSymlinks(){return!1}supportsProps(){return!1}supportsSynch(){return!1}empty(e){this.readdir("/",(t,r)=>{if(r){const t=s=>{0===r.length?e():y(this._client,r.shift(),t)};t()}else e(t)})}rename(e,t,r){this.stat(t,!1,(s,a)=>{const n=()=>{const s={from_path:p(e),to_path:p(t)};this._client.filesMoveV2(s).then(()=>r()).catch(function(s){const a=_(s);switch(a[".tag"]){case"from_lookup":r(w(a.from_lookup,e,d(s)));break;case"from_write":r(m(a.from_write,e,d(s)));break;case"to":r(m(a.to,t,d(s)));break;case"cant_copy_shared_folder":case"cant_nest_shared_folder":r(new o(i.EPERM,d(s),e));break;case"cant_move_folder_into_itself":case"duplicated_or_nested_paths":r(new o(i.EBADF,d(s),e));break;case"too_many_files":r(new o(i.ENOSPC,d(s),e));break;case"other":default:r(new o(i.EIO,d(s),e))}})};s?n():e===t?s?r(o.ENOENT(t)):r():a&&a.isDirectory()?r(o.EISDIR(t)):this.unlink(t,e=>{e?r(e):n()})})}stat(t,r,s){if("/"===t)return void e(function(){s(null,new a(n.DIRECTORY,4096))});const c={path:p(t)};this._client.filesGetMetadata(c).then(e=>{switch(e[".tag"]){case"file":const r=e;s(null,new a(n.FILE,r.size));break;case"folder":s(null,new a(n.DIRECTORY,4096));break;case"deleted":s(o.ENOENT(t))}}).catch(e=>{const r=_(e);switch(r[".tag"]){case"path":s(w(r.path,t,d(e)));break;default:s(new o(i.EIO,d(e),t))}})}openFile(e,t,r){const s={path:p(e)};this._client.filesDownload(s).then(s=>{const o=s.fileBlob,i=new FileReader;i.onload=(()=>{const s=i.result;r(null,new l(this,e,t,new a(n.FILE,s.byteLength),h(s)))}),i.readAsArrayBuffer(o)}).catch(t=>{const s=_(t);switch(s[".tag"]){case"path":r(w(s.path,e,d(t)));break;case"other":default:r(new o(i.EIO,d(t),e))}})}createFile(e,r,s,c){const h=t.alloc(0),f={contents:new Blob([u(h)],{type:"octet/stream"}),path:p(e)};this._client.filesUpload(f).then(t=>{c(null,new l(this,e,r,new a(n.FILE,0),h))}).catch(t=>{const a=_(t);switch(a[".tag"]){case"path":c(m(a.path.reason,e,d(t)));break;case"too_many_write_operations":setTimeout(()=>this.createFile(e,r,s,c),500+300*Math.random());break;case"other":default:c(new o(i.EIO,d(t),e))}})}unlink(e,t){this.stat(e,!1,(r,s)=>{s?s.isDirectory()?t(o.EISDIR(e)):y(this._client,e,t):t(r)})}rmdir(e,t){this.readdir(e,(r,s)=>{s?s.length>0?t(o.ENOTEMPTY(e)):y(this._client,e,t):t(r)})}mkdir(e,t,r){const s=f(e);this.stat(s,!1,(a,n)=>{if(a)r(a);else if(n&&!n.isDirectory())r(o.ENOTDIR(s));else{const s={path:p(e)};this._client.filesCreateFolderV2(s).then(()=>r()).catch(s=>{"too_many_write_operations"===_(s)[".tag"]?setTimeout(()=>this.mkdir(e,t,r),500+300*Math.random()):r(m(_(s).path,e,d(s)))})}})}readdir(e,t){const r={path:p(e)};this._client.filesListFolder(r).then(r=>{!function e(t,r,s,a,n){const o=s.entries.map(e=>e.path_display).filter(e=>!!e);const i=a.concat(o);if(s.has_more){const a={cursor:s.cursor};t.filesListFolderContinue(a).then(s=>{e(t,r,s,i,n)}).catch(e=>{b(e,r,n)})}else n(null,i)}(this._client,e,r,[],t)}).catch(r=>{b(r,e,t)})}_syncFile(e,t,r){const s={contents:new Blob([u(t)],{type:"octet/stream"}),path:p(e),mode:{".tag":"overwrite"}};this._client.filesUpload(s).then(()=>{r()}).catch(s=>{const a=_(s);switch(a[".tag"]){case"path":r(m(a.path.reason,e,d(s)));break;case"too_many_write_operations":setTimeout(()=>this._syncFile(e,t,r),500+300*Math.random());break;case"other":default:r(new o(i.EIO,d(s),e))}})}}function b(e,t,r){const s=_(e);switch(s[".tag"]){case"path":r(w(s.path,t,d(e)));break;case"other":default:r(new o(i.EIO,d(e),t))}}return E.Name="DropboxV2",E.Options={client:{type:"object",description:"An *authenticated* Dropbox client. Must be from the 2.5.x JS SDK."}},E.DropboxFile=l,E});
//# sourceMappingURL=../../sourcemaps/providers/dropbox/dropbox-provider.js.map
