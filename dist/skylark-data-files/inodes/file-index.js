/**
 * skylark-data-files - The skylark file system library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["skylark-langx-paths","../stats","../file-type","./dir-inode","./file-inode"],function(t,e,i,n,s){"use strict";class r{constructor(){this._index={},this.addPath("/",new n)}static fromListing(t){const s=new r,o=new n;s._index["/"]=o;const d=[["",t,o]];for(;d.length>0;){let t;const r=d.pop(),o=r[0],h=r[1],a=r[2];for(const r in h)if(h.hasOwnProperty(r)){const l=h[r],u=`${o}/${r}`;l?(s._index[u]=t=new n,d.push([u,l,t])):t=new FileInode(new e(i.FILE,-1,365)),a&&(a._ls[r]=t)}}return s}fileIterator(t){for(const e in this._index)if(this._index.hasOwnProperty(e)){const i=this._index[e],n=i.getListing();for(const e of n){const n=i.getItem(e);isFileInode(n)&&t(n.getData())}}}addPath(t,e){if(!e)throw new Error("Inode must be specified");if("/"!==t[0])throw new Error("Path must be absolute, got: "+t);if(this._index.hasOwnProperty(t))return this._index[t]===e;const i=this._split_path(t),s=i[0],r=i[1];let o=this._index[s];return!(void 0===o&&"/"!==t&&(o=new n,!this.addPath(s,o)))&&(!("/"!==t&&!o.addItem(r,e))&&(isDirInode(e)&&(this._index[t]=e),!0))}addPathFast(t,e){const i=t.lastIndexOf("/"),s=0===i?"/":t.substring(0,i),r=t.substring(i+1);let o=this._index[s];return void 0===o&&(o=new n,this.addPathFast(s,o)),!!o.addItem(r,e)&&(e.isDir()&&(this._index[t]=e),!0)}removePath(t){const e=this._split_path(t),i=e[0],n=e[1],s=this._index[i];if(void 0===s)return null;const r=s.remItem(n);if(null===r)return null;if(isDirInode(r)){const e=r.getListing();for(const i of e)this.removePath(t+"/"+i);"/"!==t&&delete this._index[t]}return r}ls(t){const e=this._index[t];return void 0===e?null:e.getListing()}getInode(t){const e=this._split_path(t),i=e[0],n=e[1],s=this._index[i];return void 0===s?null:i===t?s:s.getItem(n)}_split_path(e){const i=t.dirname(e);return[i,e.substr(i.length+("/"===i?0:1))]}}return r});
//# sourceMappingURL=../sourcemaps/inodes/file-index.js.map
