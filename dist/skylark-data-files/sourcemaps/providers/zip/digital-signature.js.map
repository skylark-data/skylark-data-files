{"version":3,"sources":["providers/zip/digital-signature.js"],"names":["define","[object Object]","data","this","readUInt32LE","FileError","ErrorCodes","EINVAL","readUInt16LE","slice","size"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aA8BA,aAVIC,YAAYC,GAER,GADAC,KAAKD,KAAOA,EACsB,WAA9BC,KAAKD,KAAKE,aAAa,GACvB,MAAM,IAAIC,UAAUC,WAAWC,OAAQ,wCAA0CJ,KAAKD,KAAKE,aAAa,IAGhHH,OAAS,OAAOE,KAAKD,KAAKM,aAAa,GACvCP,gBAAkB,OAAOE,KAAKD,KAAKO,MAAM,EAAG,EAAIN,KAAKO","file":"../../../providers/zip/digital-signature.js","sourcesContent":["define([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * 4.3.13 Digital signature:\r\n     *\r\n     *      header signature                4 bytes  (0x05054b50)\r\n     *      size of data                    2 bytes\r\n     *      signature data (variable size)\r\n     *\r\n     *    With the introduction of the Central Directory Encryption\r\n     *    feature in version 6.2 of this specification, the Central\r\n     *    Directory Structure MAY be stored both compressed and encrypted.\r\n     *    Although not required, it is assumed when encrypting the\r\n     *    Central Directory Structure, that it will be compressed\r\n     *    for greater storage efficiency.  Information on the\r\n     *    Central Directory Encryption feature can be found in the section\r\n     *    describing the Strong Encryption Specification. The Digital\r\n     *    Signature record will be neither compressed nor encrypted.\r\n     */\r\n    class DigitalSignature {\r\n        constructor(data) {\r\n            this.data = data;\r\n            if (this.data.readUInt32LE(0) !== 0x05054b50) {\r\n                throw new FileError(ErrorCodes.EINVAL, \"Invalid digital signature signature: \" + this.data.readUInt32LE(0));\r\n            }\r\n        }\r\n        size() { return this.data.readUInt16LE(4); }\r\n        signatureData() { return this.data.slice(6, 6 + this.size()); }\r\n    }\r\n\r\n    return DigitalSignature;\r\n\r\n});"]}