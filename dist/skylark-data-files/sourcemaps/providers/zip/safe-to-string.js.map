{"version":3,"sources":["providers/zip/safe-to-string.js"],"names":["define","buff","useUTF8","start","length","toString","ExtendedASCII","byte2str","slice"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aAqBA,OAbA,SAAsBC,EAAMC,EAASC,EAAOC,GACxC,OAAe,IAAXA,EACO,GAEFF,EACED,EAAKI,SAAS,OAAQF,EAAOA,EAAQC,GAGrCE,cAAcC,SAASN,EAAKO,MAAML,EAAOA,EAAQC","file":"../../../providers/zip/safe-to-string.js","sourcesContent":["define([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Safely returns the string from the buffer, even if it is 0 bytes long.\r\n     * (Normally, calling toString() on a buffer with start === end causes an\r\n     * exception).\r\n     * @hidden\r\n     */\r\n    function safeToString(buff, useUTF8, start, length) {\r\n        if (length === 0) {\r\n            return \"\";\r\n        }\r\n        else if (useUTF8) {\r\n            return buff.toString('utf8', start, start + length);\r\n        }\r\n        else {\r\n            return ExtendedASCII.byte2str(buff.slice(start, start + length));\r\n        }\r\n    }\r\n\r\n\r\n    return safeToString;\r\n\r\n});"]}