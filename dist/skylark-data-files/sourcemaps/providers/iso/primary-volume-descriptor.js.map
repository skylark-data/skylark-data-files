{"version":3,"sources":["providers/iso/primary-volume-descriptor.js"],"names":["define","FileError","ErrorCodes","PrimaryOrSupplementaryVolumeDescriptor","ISODirectoryRecord","[object Object]","data","super","this","type","EIO","idx","len","_getString"],"mappings":";;;;;;;AAAAA,QACI,mBACA,oBACA,+CACA,0BACD,SAAUC,EAAUC,EAAWC,EAAuCC,GACrE,aAwBA,qBAlBsCD,EAClCE,YAAYC,GAER,GADAC,MAAMD,GACc,IAAhBE,KAAKC,OACL,MAAM,IAAIR,EAAUC,EAAWQ,IAAK,sCAG5CL,OACI,MAAO,UAEXA,8BAA8BC,GAC1B,OAAO,IAAIF,EAAmBE,GAAO,GAEzCD,WAAWM,EAAKC,GACZ,OAAOJ,KAAKK,WAAWF,EAAKC","file":"../../../providers/iso/primary-volume-descriptor.js","sourcesContent":["define([\r\n    '../../file-error',\r\n    '../../error-codes',\r\n    \"./primary-or-supplementary-volume-descriptor\",\r\n    \"./iso-directory-record\"\r\n], function (FileError,ErrorCodes,PrimaryOrSupplementaryVolumeDescriptor,ISODirectoryRecord) {\r\n    'use strict';\r\n\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    class PrimaryVolumeDescriptor extends PrimaryOrSupplementaryVolumeDescriptor {\r\n        constructor(data) {\r\n            super(data);\r\n            if (this.type() !== 1 /* PrimaryVolumeDescriptor */) {\r\n                throw new FileError(ErrorCodes.EIO, `Invalid primary volume descriptor.`);\r\n            }\r\n        }\r\n        name() {\r\n            return \"ISO9660\";\r\n        }\r\n        _constructRootDirectoryRecord(data) {\r\n            return new ISODirectoryRecord(data, -1);\r\n        }\r\n        _getString(idx, len) {\r\n            return this._getString(idx, len);\r\n        }\r\n    }\r\n\r\n    return PrimaryVolumeDescriptor;\r\n});"]}