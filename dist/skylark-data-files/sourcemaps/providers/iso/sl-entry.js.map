{"version":3,"sources":["providers/iso/sl-entry.js"],"names":["define","SystemUseEntry","SLComponentRecord","[object Object]","data","super","this","_data","flags","records","Array","i","length","record","slice","push"],"mappings":";;;;;;;AAAAA,QACI,sBACA,yBACD,SAAUC,EAAeC,GACxB,aA2BA,qBAtBsBD,EAClBE,YAAYC,GACRC,MAAMD,GAEVD,QACI,OAAOG,KAAKC,MAAM,GAEtBJ,eACI,OAAsB,EAAfG,KAAKE,QAEhBL,mBACI,MAAMM,EAAU,IAAIC,MACpB,IAAIC,EAAI,EACR,KAAOA,EAAIL,KAAKM,UAAU,CACtB,MAAMC,EAAS,IAAIX,EAAkBI,KAAKC,MAAMO,MAAMH,IACtDF,EAAQM,KAAKF,GACbF,GAAKE,EAAOD,SAEhB,OAAOH","file":"../../../providers/iso/sl-entry.js","sourcesContent":["define([\r\n    \"./system-user-entry\",\r\n    \"./sl-component-record\"\r\n], function (SystemUseEntry,SLComponentRecord) {\r\n    'use strict';\r\n    /**\r\n     * RockRidge: Records symbolic link\r\n     * @hidden\r\n     */\r\n    class SLEntry extends SystemUseEntry {\r\n        constructor(data) {\r\n            super(data);\r\n        }\r\n        flags() {\r\n            return this._data[4];\r\n        }\r\n        continueFlag() {\r\n            return this.flags() & 0x1;\r\n        }\r\n        componentRecords() {\r\n            const records = new Array();\r\n            let i = 5;\r\n            while (i < this.length()) {\r\n                const record = new SLComponentRecord(this._data.slice(i));\r\n                records.push(record);\r\n                i += record.length();\r\n            }\r\n            return records;\r\n        }\r\n    }\r\n\r\n    return SLEntry;\r\n});"]}