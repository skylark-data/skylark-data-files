{"version":3,"sources":["providers/iso/tf-entry.js"],"names":["define","SystemUseEntry","misc","[object Object]","data","super","this","_data","flags","_longFormDates","getDate","getShortFormDate","previousDates"],"mappings":";;;;;;;AAAAA,QACI,sBACA,UACD,SAAUC,EAAeC,GACxB,aA8GA,qBAxGsBD,EAClBE,YAAYC,GACRC,MAAMD,GAEVD,QACI,OAAOG,KAAKC,MAAM,GAEtBJ,WACI,OAAmB,EAAfG,KAAKE,QACDF,KAAKG,iBACEP,EAAKQ,QAAQJ,KAAKC,MAAO,GAGzBL,EAAKS,iBAAiBL,KAAKC,MAAO,GAItC,KAGfJ,SACI,GAAmB,EAAfG,KAAKE,QAA0B,CAC/B,MAAMI,EAAgC,EAAfN,KAAKE,QAA8B,EAAI,EAC9D,OAAIF,KAAKG,eACEP,EAAKQ,QAAQJ,KAAKC,MAAO,EAAqB,GAAhBK,GAG9BV,EAAKS,iBAAiBL,KAAKC,MAAO,EAAqB,EAAhBK,GAIlD,OAAO,KAGfT,SACI,GAAmB,EAAfG,KAAKE,QAA0B,CAC/B,IAAII,EAAgC,EAAfN,KAAKE,QAA8B,EAAI,EAE5D,OADAI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACnDF,KAAKG,eACEP,EAAKQ,QAAQJ,KAAKC,MAAO,EAAqB,GAAhBK,GAG9BV,EAAKS,iBAAiBL,KAAKC,MAAO,EAAqB,EAAhBK,GAIlD,OAAO,KAGfT,SACI,GAAmB,GAAfG,KAAKE,QAA2B,CAChC,IAAII,EAAgC,EAAfN,KAAKE,QAA8B,EAAI,EAG5D,OAFAI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACvDI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACnDF,KAAKG,eACEP,EAAKQ,QAAQJ,KAAKC,MAAO,EAAqB,GAAhBK,GAG9BV,EAAKS,iBAAiBL,KAAKC,MAAO,EAAqB,EAAhBK,GAIlD,OAAO,KAGfT,aACI,GAAmB,GAAfG,KAAKE,QAA+B,CACpC,IAAII,EAAgC,EAAfN,KAAKE,QAA8B,EAAI,EAI5D,OAHAI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACvDI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACvDI,GAAiC,GAAfN,KAAKE,QAA6B,EAAI,EACpDF,KAAKG,eACEP,EAAKQ,QAAQJ,KAAKC,MAAO,EAAqB,GAAhBK,GAG9BV,EAAKS,iBAAiBL,KAAKC,MAAO,EAAqB,EAAhBK,GAIlD,OAAO,KAGfT,YACI,GAAmB,GAAfG,KAAKE,QAA8B,CACnC,IAAII,EAAgC,EAAfN,KAAKE,QAA8B,EAAI,EAK5D,OAJAI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACvDI,GAAiC,EAAfN,KAAKE,QAA4B,EAAI,EACvDI,GAAiC,GAAfN,KAAKE,QAA6B,EAAI,EACxDI,GAAiC,GAAfN,KAAKE,QAAiC,EAAI,EACxDF,KAAKG,eACEP,EAAKQ,QAAQJ,KAAKC,MAAO,EAAqB,GAAhBK,GAG9BV,EAAKS,iBAAiBL,KAAKC,MAAO,EAAqB,EAAhBK,GAIlD,OAAO,KAGfT,iBACI,QAAUG,KAAKE","file":"../../../providers/iso/tf-entry.js","sourcesContent":["define([\r\n    \"./system-user-entry\",\r\n    \"./misc\"\r\n], function (SystemUseEntry,misc) {\r\n    'use strict';\r\n\r\n    /**\r\n     * RockRidge: Records file timestamps\r\n     * @hidden\r\n     */\r\n    class TFEntry extends SystemUseEntry {\r\n        constructor(data) {\r\n            super(data);\r\n        }\r\n        flags() {\r\n            return this._data[4];\r\n        }\r\n        creation() {\r\n            if (this.flags() & 1 /* CREATION */) {\r\n                if (this._longFormDates()) {\r\n                    return misc.getDate(this._data, 5);\r\n                }\r\n                else {\r\n                    return misc.getShortFormDate(this._data, 5);\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        modify() {\r\n            if (this.flags() & 2 /* MODIFY */) {\r\n                const previousDates = (this.flags() & 1 /* CREATION */) ? 1 : 0;\r\n                if (this._longFormDates) {\r\n                    return misc.getDate(this._data, 5 + (previousDates * 17));\r\n                }\r\n                else {\r\n                    return misc.getShortFormDate(this._data, 5 + (previousDates * 7));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        access() {\r\n            if (this.flags() & 4 /* ACCESS */) {\r\n                let previousDates = (this.flags() & 1 /* CREATION */) ? 1 : 0;\r\n                previousDates += (this.flags() & 2 /* MODIFY */) ? 1 : 0;\r\n                if (this._longFormDates) {\r\n                    return misc.getDate(this._data, 5 + (previousDates * 17));\r\n                }\r\n                else {\r\n                    return misc.getShortFormDate(this._data, 5 + (previousDates * 7));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        backup() {\r\n            if (this.flags() & 16 /* BACKUP */) {\r\n                let previousDates = (this.flags() & 1 /* CREATION */) ? 1 : 0;\r\n                previousDates += (this.flags() & 2 /* MODIFY */) ? 1 : 0;\r\n                previousDates += (this.flags() & 4 /* ACCESS */) ? 1 : 0;\r\n                if (this._longFormDates) {\r\n                    return misc.getDate(this._data, 5 + (previousDates * 17));\r\n                }\r\n                else {\r\n                    return misc.getShortFormDate(this._data, 5 + (previousDates * 7));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        expiration() {\r\n            if (this.flags() & 32 /* EXPIRATION */) {\r\n                let previousDates = (this.flags() & 1 /* CREATION */) ? 1 : 0;\r\n                previousDates += (this.flags() & 2 /* MODIFY */) ? 1 : 0;\r\n                previousDates += (this.flags() & 4 /* ACCESS */) ? 1 : 0;\r\n                previousDates += (this.flags() & 16 /* BACKUP */) ? 1 : 0;\r\n                if (this._longFormDates) {\r\n                    return misc.getDate(this._data, 5 + (previousDates * 17));\r\n                }\r\n                else {\r\n                    return misc.getShortFormDate(this._data, 5 + (previousDates * 7));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        effective() {\r\n            if (this.flags() & 64 /* EFFECTIVE */) {\r\n                let previousDates = (this.flags() & 1 /* CREATION */) ? 1 : 0;\r\n                previousDates += (this.flags() & 2 /* MODIFY */) ? 1 : 0;\r\n                previousDates += (this.flags() & 4 /* ACCESS */) ? 1 : 0;\r\n                previousDates += (this.flags() & 16 /* BACKUP */) ? 1 : 0;\r\n                previousDates += (this.flags() & 32 /* EXPIRATION */) ? 1 : 0;\r\n                if (this._longFormDates) {\r\n                    return misc.getDate(this._data, 5 + (previousDates * 17));\r\n                }\r\n                else {\r\n                    return misc.getShortFormDate(this._data, 5 + (previousDates * 7));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        _longFormDates() {\r\n            return !!(this.flags() && 128 /* LONG_FORM */);\r\n        }\r\n    }\r\n    return TFEntry;\r\n});"]}