{"version":3,"sources":["providers/iso/primary-or-supplementary-volume-descriptor.js"],"names":["define","misc","VolumeDescriptor","[object Object]","data","super","this","_root","_getString32","_data","readUInt32LE","readUInt16LE","readUInt32BE","isoData","_constructRootDirectoryRecord","slice","rootCheckForRockRidge","_getString","getDate","idx"],"mappings":";;;;;;;AAAAA,QACI,SACA,uBACD,SAAUC,EAAKC,GACd,aAiGA,qBA5FqDA,EACjDC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,MAAQ,KAEjBJ,mBACI,OAAOG,KAAKE,aAAa,GAE7BL,mBACI,OAAOG,KAAKE,aAAa,IAE7BL,kBACI,OAAOG,KAAKG,MAAMC,aAAa,IAEnCP,gBACI,OAAOG,KAAKG,MAAME,aAAa,KAEnCR,uBACI,OAAOG,KAAKG,MAAME,aAAa,KAEnCR,mBACI,OAAOG,KAAKG,MAAME,aAAa,KAEnCR,gBACI,OAAOG,KAAKG,MAAMC,aAAa,KAEnCP,2BACI,OAAOG,KAAKG,MAAMC,aAAa,KAEnCP,mCACI,OAAOG,KAAKG,MAAMC,aAAa,KAEnCP,2BACI,OAAOG,KAAKG,MAAMG,aAAa,KAEnCT,mCACI,OAAOG,KAAKG,MAAMG,aAAa,KAEnCT,mBAAmBU,GAKf,OAJmB,OAAfP,KAAKC,QACLD,KAAKC,MAAQD,KAAKQ,8BAA8BR,KAAKG,MAAMM,MAAM,MACjET,KAAKC,MAAMS,sBAAsBH,IAE9BP,KAAKC,MAEhBJ,sBACI,OAAOG,KAAKW,WAAW,IAAK,KAEhCd,sBACI,OAAOG,KAAKW,WAAW,IAAK,KAEhCd,yBACI,OAAOG,KAAKW,WAAW,IAAK,KAEhCd,wBACI,OAAOG,KAAKW,WAAW,IAAK,KAEhCd,0BACI,OAAOG,KAAKW,WAAW,IAAK,IAEhCd,yBACI,OAAOG,KAAKW,WAAW,IAAK,IAEhCd,8BACI,OAAOG,KAAKW,WAAW,IAAK,IAEhCd,qBACI,OAAOF,EAAKiB,QAAQZ,KAAKG,MAAO,KAEpCN,yBACI,OAAOF,EAAKiB,QAAQZ,KAAKG,MAAO,KAEpCN,uBACI,OAAOF,EAAKiB,QAAQZ,KAAKG,MAAO,KAEpCN,sBACI,OAAOF,EAAKiB,QAAQZ,KAAKG,MAAO,KAEpCN,uBACI,OAAOG,KAAKG,MAAM,KAEtBN,kBACI,OAAOG,KAAKG,MAAMM,MAAM,IAAK,MAEjCZ,WACI,OAAOG,KAAKG,MAAMM,MAAM,KAAM,MAElCZ,aAAagB,GACT,OAAOb,KAAKW,WAAWE,EAAK","file":"../../../providers/iso/primary-or-supplementary-volume-descriptor.js","sourcesContent":["define([\r\n    \"./misc\",\r\n    \"./volume-descriptor\"\r\n], function (misc,VolumeDescriptor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    class PrimaryOrSupplementaryVolumeDescriptor extends VolumeDescriptor {\r\n        constructor(data) {\r\n            super(data);\r\n            this._root = null;\r\n        }\r\n        systemIdentifier() {\r\n            return this._getString32(8);\r\n        }\r\n        volumeIdentifier() {\r\n            return this._getString32(40);\r\n        }\r\n        volumeSpaceSize() {\r\n            return this._data.readUInt32LE(80);\r\n        }\r\n        volumeSetSize() {\r\n            return this._data.readUInt16LE(120);\r\n        }\r\n        volumeSequenceNumber() {\r\n            return this._data.readUInt16LE(124);\r\n        }\r\n        logicalBlockSize() {\r\n            return this._data.readUInt16LE(128);\r\n        }\r\n        pathTableSize() {\r\n            return this._data.readUInt32LE(132);\r\n        }\r\n        locationOfTypeLPathTable() {\r\n            return this._data.readUInt32LE(140);\r\n        }\r\n        locationOfOptionalTypeLPathTable() {\r\n            return this._data.readUInt32LE(144);\r\n        }\r\n        locationOfTypeMPathTable() {\r\n            return this._data.readUInt32BE(148);\r\n        }\r\n        locationOfOptionalTypeMPathTable() {\r\n            return this._data.readUInt32BE(152);\r\n        }\r\n        rootDirectoryEntry(isoData) {\r\n            if (this._root === null) {\r\n                this._root = this._constructRootDirectoryRecord(this._data.slice(156));\r\n                this._root.rootCheckForRockRidge(isoData);\r\n            }\r\n            return this._root;\r\n        }\r\n        volumeSetIdentifier() {\r\n            return this._getString(190, 128);\r\n        }\r\n        publisherIdentifier() {\r\n            return this._getString(318, 128);\r\n        }\r\n        dataPreparerIdentifier() {\r\n            return this._getString(446, 128);\r\n        }\r\n        applicationIdentifier() {\r\n            return this._getString(574, 128);\r\n        }\r\n        copyrightFileIdentifier() {\r\n            return this._getString(702, 38);\r\n        }\r\n        abstractFileIdentifier() {\r\n            return this._getString(740, 36);\r\n        }\r\n        bibliographicFileIdentifier() {\r\n            return this._getString(776, 37);\r\n        }\r\n        volumeCreationDate() {\r\n            return misc.getDate(this._data, 813);\r\n        }\r\n        volumeModificationDate() {\r\n            return misc.getDate(this._data, 830);\r\n        }\r\n        volumeExpirationDate() {\r\n            return misc.getDate(this._data, 847);\r\n        }\r\n        volumeEffectiveDate() {\r\n            return misc.getDate(this._data, 864);\r\n        }\r\n        fileStructureVersion() {\r\n            return this._data[881];\r\n        }\r\n        applicationUsed() {\r\n            return this._data.slice(883, 883 + 512);\r\n        }\r\n        reserved() {\r\n            return this._data.slice(1395, 1395 + 653);\r\n        }\r\n        _getString32(idx) {\r\n            return this._getString(idx, 32);\r\n        }\r\n    }\r\n\r\n    return PrimaryOrSupplementaryVolumeDescriptor;\r\n});"]}