{"version":3,"sources":["providers/indexeddb/indexed-db-provider.js"],"names":["define","FileError","ErrorCodes","AsyncKeyValueProvider","utils","IndexedDBStore","IndexedDBROTransaction","IndexedDBRWTransaction","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","IndexedDBProvider","[object Object]","cacheSize","super","opts","cb","Create","storeName","e","store","idbfs","init","open","Name","Options","type","optional","description"],"mappings":";;;;;;;AAAAA,QACI,mBACA,oBACA,8BACA,cACA,oBACA,8BACA,+BACD,SAAUC,EAAUC,EAAYC,EAAwBC,EAAMC,EAAeC,EAAuBC,GACnG,aAMA,MAAMC,EAAYC,OAAOD,WACrBC,OAAOC,cACPD,OAAOE,iBACPF,OAAOG,kBAILC,UAA0BV,EAC5BW,YAAYC,GACRC,MAAMD,GAKVD,cAAcG,KAAWC,GACrBb,EAAec,OAAOF,EAAKG,UAAYH,EAAKG,UAAY,YAAa,CAACC,EAAGC,KACrE,GAAIA,EAAO,CACP,MAAMC,EAAQ,IAAIV,EAA8C,iBAApBI,EAAc,UAAiBA,EAAKF,UAAY,KAC5FQ,EAAMC,KAAKF,EAAQD,IACXA,EACAH,EAAGG,GAGHH,EAAG,KAAMK,UAKjBL,EAAGG,KAIfP,qBAKI,IACI,YAA4B,IAAdN,GAA6B,OAASA,EAAUiB,KAAK,sBAEvE,MAAOJ,GACH,OAAO,IAuBnB,OAnBAR,EAAkBa,KAAO,YACzBb,EAAkBc,SACdP,WACIQ,KAAM,SACNC,UAAU,EACVC,YAAa,sIAEjBf,WACIa,KAAM,SACNC,UAAU,EACVC,YAAa,yFAKrBjB,EAAkBP,uBAAyBA,EAC3CO,EAAkBN,uBAAyBA,EAC3CM,EAAkBR,eAAiBA,EAE5BQ","file":"../../../providers/indexeddb/indexed-db-provider.js","sourcesContent":["define([\r\n    '../../file-error',\r\n    '../../error-codes',\r\n    '../async-key-value-provider',\r\n    '../../utils',\r\n    \"./indexd-db-store\",\r\n    \"./indexed-db-ro-transaction\",\r\n    \"./indexed-db-rw-transaction\"\r\n], function (FileError,ErrorCodes, AsyncKeyValueProvider,  utils,IndexedDBStore,IndexedDBROTransaction,IndexedDBRWTransaction) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get the indexedDB constructor for the current browser.\r\n     * @hidden\r\n     */\r\n    const indexedDB = window.indexedDB ||\r\n        window.mozIndexedDB ||\r\n        window.webkitIndexedDB ||\r\n        window.msIndexedDB;\r\n    /**\r\n     * A file system that uses the IndexedDB key value file system.\r\n     */\r\n    class IndexedDBProvider extends AsyncKeyValueProvider {\r\n        constructor(cacheSize) {\r\n            super(cacheSize);\r\n        }\r\n        /**\r\n         * Constructs an IndexedDB file system with the given options.\r\n         */\r\n        static Create(opts = {}, cb) {\r\n            IndexedDBStore.Create(opts.storeName ? opts.storeName : 'browserfs', (e, store) => {\r\n                if (store) {\r\n                    const idbfs = new IndexedDBProvider(typeof (opts.cacheSize) === 'number' ? opts.cacheSize : 100);\r\n                    idbfs.init(store, (e) => {\r\n                        if (e) {\r\n                            cb(e);\r\n                        }\r\n                        else {\r\n                            cb(null, idbfs);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    cb(e);\r\n                }\r\n            });\r\n        }\r\n        static isAvailable() {\r\n            // In Safari's private browsing mode, indexedDB.open returns NULL.\r\n            // In Firefox, it throws an exception.\r\n            // In Chrome, it \"just works\", and clears the database when you leave the page.\r\n            // Untested: Opera, IE.\r\n            try {\r\n                return typeof indexedDB !== 'undefined' && null !== indexedDB.open(\"__browserfs_test__\");\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    IndexedDBProvider.Name = \"IndexedDB\";\r\n    IndexedDBProvider.Options = {\r\n        storeName: {\r\n            type: \"string\",\r\n            optional: true,\r\n            description: \"The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name.\"\r\n        },\r\n        cacheSize: {\r\n            type: \"number\",\r\n            optional: true,\r\n            description: \"The size of the inode cache. Defaults to 100. A size of 0 or below disables caching.\"\r\n        }\r\n    };\r\n\r\n\r\n    IndexedDBProvider.IndexedDBROTransaction = IndexedDBROTransaction;\r\n    IndexedDBProvider.IndexedDBRWTransaction = IndexedDBRWTransaction;\r\n    IndexedDBProvider.IndexedDBStore = IndexedDBStore;\r\n\r\n    return IndexedDBProvider;\r\n});"]}