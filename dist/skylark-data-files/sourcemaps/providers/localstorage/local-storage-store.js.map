{"version":3,"sources":["providers/localstorage/local-storage-store.js"],"names":["define","Buffer","SimpleSyncRWTransaction","ErrorCodes","FileError","[object Object]","LocalStorageProvider","Name","window","localStorage","clear","type","this","key","data","getItem","from","binaryEncoding","e","overwrite","setItem","toString","ENOSPC","removeItem","EIO"],"mappings":";;;;;;;AAAAA,QACI,8BACA,gCACA,oBACA,oBACD,SAAUC,EAAOC,EAAyBC,EAAWC,GACpD,aAsDA,aA/CIC,OACI,OAAOC,qBAAqBC,KAEhCF,QACIG,OAAOC,aAAaC,QAExBL,iBAAiBM,GAEb,OAAO,IAAIT,EAAwBU,MAEvCP,IAAIQ,GACA,IACI,MAAMC,EAAON,OAAOC,aAAaM,QAAQF,GACzC,GAAa,OAATC,EACA,OAAOb,EAAOe,KAAKF,EAAMG,gBAGjC,MAAOC,KAMXb,IAAIQ,EAAKC,EAAMK,GACX,IACI,SAAKA,GAAkD,OAArCX,OAAOC,aAAaM,QAAQF,KAI9CL,OAAOC,aAAaW,QAAQP,EAAKC,EAAKO,SAASJ,iBACxC,IAEX,MAAOC,GACH,MAAM,IAAId,EAAUD,EAAWmB,OAAQ,0BAG/CjB,IAAIQ,GACA,IACIL,OAAOC,aAAac,WAAWV,GAEnC,MAAOK,GACH,MAAM,IAAId,EAAUD,EAAWqB,IAAK,wBAA0BX,EAAM,KAAOK","file":"../../../providers/localstorage/local-storage-store.js","sourcesContent":["define([\r\n    \"skylark-langx-binary/buffer\",\r\n    '../simple-sync-rw-transaction',\r\n    '../../error-codes',\r\n    '../../file-error',\r\n], function (Buffer,SimpleSyncRWTransaction, ErrorCodes,FileError) {\r\n    'use strict';\r\n\r\n\r\n    /**\r\n     * A synchronous key-value store backed by localStorage.\r\n     */\r\n    class LocalStorageStore {\r\n        name() {\r\n            return LocalStorageProvider.Name;\r\n        }\r\n        clear() {\r\n            window.localStorage.clear();\r\n        }\r\n        beginTransaction(type) {\r\n            // No need to differentiate.\r\n            return new SimpleSyncRWTransaction(this);\r\n        }\r\n        get(key) {\r\n            try {\r\n                const data = window.localStorage.getItem(key);\r\n                if (data !== null) {\r\n                    return Buffer.from(data, binaryEncoding);\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Do nothing.\r\n            }\r\n            // Key doesn't exist, or a failure occurred.\r\n            return undefined;\r\n        }\r\n        put(key, data, overwrite) {\r\n            try {\r\n                if (!overwrite && window.localStorage.getItem(key) !== null) {\r\n                    // Don't want to overwrite the key!\r\n                    return false;\r\n                }\r\n                window.localStorage.setItem(key, data.toString(binaryEncoding));\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                throw new FileError(ErrorCodes.ENOSPC, \"LocalStorage is full.\");\r\n            }\r\n        }\r\n        del(key) {\r\n            try {\r\n                window.localStorage.removeItem(key);\r\n            }\r\n            catch (e) {\r\n                throw new FileError(ErrorCodes.EIO, \"Unable to delete key \" + key + \": \" + e);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return LocalStorageStore;\r\n});"]}