{"version":3,"sources":["providers/inmemory/in-memory-store.js"],"names":["define","SimpleSyncRWTransaction","[object Object]","this","store","type","key","data","overwrite","hasOwnProperty"],"mappings":";;;;;;;AAAAA,QACI,iCACD,SAAUC,GACT,aA6BA,aAvBIC,cACIC,KAAKC,SAETF,QAAUC,KAAKC,SACfF,iBAAiBG,GACb,OAAO,IAAIJ,EAAwBE,MAEvCD,IAAII,GACA,OAAOH,KAAKC,MAAME,GAEtBJ,IAAII,EAAKC,EAAMC,GACX,SAAKA,GAAaL,KAAKC,MAAMK,eAAeH,KAG5CH,KAAKC,MAAME,GAAOC,EACX,IAEXL,IAAII,UACOH,KAAKC,MAAME","file":"../../../providers/inmemory/in-memory-store.js","sourcesContent":["define([\r\n    '../simple-sync-rw-transaction'\r\n], function (SimpleSyncRWTransaction) {\r\n    'use strict';\r\n\r\n    /**\r\n     * A simple in-memory key-value store backed by a JavaScript object.\r\n     */\r\n    class InMemoryStore {\r\n        constructor() {\r\n            this.store = {};\r\n        }\r\n        clear() { this.store = {}; }\r\n        beginTransaction(type) {\r\n            return new SimpleSyncRWTransaction(this);\r\n        }\r\n        get(key) {\r\n            return this.store[key];\r\n        }\r\n        put(key, data, overwrite) {\r\n            if (!overwrite && this.store.hasOwnProperty(key)) {\r\n                return false;\r\n            }\r\n            this.store[key] = data;\r\n            return true;\r\n        }\r\n        del(key) {\r\n            delete this.store[key];\r\n        }\r\n    }\r\n\r\n\r\n    return InMemoryStore;\r\n});"]}