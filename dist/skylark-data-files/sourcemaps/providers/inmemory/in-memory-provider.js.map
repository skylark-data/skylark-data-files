{"version":3,"sources":["providers/inmemory/in-memory-provider.js"],"names":["define","SyncKeyValueProvider","InMemoryStore","InMemoryProvider","[object Object]","Name","super","store","options","cb","Options"],"mappings":";;;;;;;AAAAA,QACI,6BACA,qBACD,SAAUC,EAAqBC,GAC9B,mBAMMC,UAAyBF,EAC3BG,OAAS,OAAOD,EAAiBE,KACjCD,cACIE,OAAQC,MAAO,IAAIL,IAKvBE,cAAcI,EAASC,GACnBA,EAAG,KAAM,IAAIN,IAQrB,OALAA,EAAiBE,KAAO,WACxBF,EAAiBO,WAEjBP,EAAiBD,cAAgBA,EAE1BC","file":"../../../providers/inmemory/in-memory-provider.js","sourcesContent":["define([\n    '../sync-key-value-provider',\n    \"./in-memory-store\"\n], function (SyncKeyValueProvider,InMemoryStore) {\n    'use strict';\n\n    /**\n     * A simple in-memory file system backed by an InMemoryStore.\n     * Files are not persisted across page loads.\n     */\n    class InMemoryProvider extends SyncKeyValueProvider {\n        name() { return InMemoryProvider.Name; }\n        constructor() {\n            super({ store: new InMemoryStore() });\n        }\n        /**\n         * Creates an InMemoryProvider instance.\n         */\n        static Create(options, cb) {\n            cb(null, new InMemoryProvider());\n        }\n    }\n    InMemoryProvider.Name = \"InMemory\";\n    InMemoryProvider.Options = {};\n\n    InMemoryProvider.InMemoryStore = InMemoryStore;\n\n    return InMemoryProvider;\n});"]}