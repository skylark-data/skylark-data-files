{"version":3,"sources":["providers/async-key-value-file.js"],"names":["define","files","PreloadFile","[object Object]","_fs","_path","_flag","_stat","contents","super","cb","this","isDirty","_sync","getPath","getBuffer","getStats","e","resetDirty","sync"],"mappings":";;;;;;;AAAAA,QACI,WACA,kBACD,SAAUC,EAAOC,GAChB,aA0BA,qBAxBgCA,EAC5BC,YAAYC,EAAKC,EAAOC,EAAOC,EAAOC,GAClCC,MAAML,EAAKC,EAAOC,EAAOC,EAAOC,GAEpCL,KAAKO,GACGC,KAAKC,UACLD,KAAKP,IAAIS,MAAMF,KAAKG,UAAWH,KAAKI,YAAaJ,KAAKK,WAAaC,IAC1DA,GACDN,KAAKO,aAETR,EAAGO,KAIPP,IAGRP,MAAMO,GACFC,KAAKQ,KAAKT","file":"../../providers/async-key-value-file.js","sourcesContent":["define([\r\n    \"../files\",\r\n    './preload-file'\r\n], function (files, PreloadFile) {\r\n    'use strict';\r\n\r\n    class AsyncKeyValueFile extends PreloadFile {\r\n        constructor(_fs, _path, _flag, _stat, contents) {\r\n            super(_fs, _path, _flag, _stat, contents);\r\n        }\r\n        sync(cb) {\r\n            if (this.isDirty()) {\r\n                this._fs._sync(this.getPath(), this.getBuffer(), this.getStats(), (e) => {\r\n                    if (!e) {\r\n                        this.resetDirty();\r\n                    }\r\n                    cb(e);\r\n                });\r\n            }\r\n            else {\r\n                cb();\r\n            }\r\n        }\r\n        close(cb) {\r\n            this.sync(cb);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return AsyncKeyValueFile;\r\n    \r\n});"]}