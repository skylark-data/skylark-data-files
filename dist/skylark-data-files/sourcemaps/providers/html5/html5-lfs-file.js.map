{"version":3,"sources":["providers/html5/html5-lfs-file.js"],"names":["define","utils","PreloadFile","buffer2ArrayBuffer","arrayBuffer2Buffer","[object Object]","fs","entry","path","flag","stat","contents","super","this","_entry","cb","isDirty","createWriter","writer","buffer","getBuffer","blob","Blob","length","size","onwriteend","err","onerror","truncate","resetDirty","convertError","getPath","write","sync"],"mappings":";;;;;;;AAAAA,QACI,cACA,sBACD,SAAUC,EAAMC,GACf,aAEA,MAAMC,mBAAEA,EAAkBC,mBAAEA,GAAuBH,EAyCnD,qBAhC2BC,EACvBG,YAAYC,EAAIC,EAAOC,EAAMC,EAAMC,EAAMC,GACrCC,MAAMN,EAAIE,EAAMC,EAAMC,EAAMC,GAC5BE,KAAKC,OAASP,EAElBF,KAAKU,GACD,IAAKF,KAAKG,UACN,OAAOD,IAEXF,KAAKC,OAAOG,aAAcC,IACtB,MAAMC,EAASN,KAAKO,YACdC,EAAO,IAAIC,MAAMnB,EAAmBgB,KACpCI,EAASF,EAAKG,KACpBN,EAAOO,WAAa,CAACC,IACjBR,EAAOO,WAAa,KACpBP,EAAOS,QAAU,KACjBT,EAAOU,SAASL,GAChBV,KAAKgB,aACLd,MAEJG,EAAOS,QAAU,CAACD,IACdX,EAAGe,aAAaJ,EAAKb,KAAKkB,WAAW,MAEzCb,EAAOc,MAAMX,KAGrBhB,MAAMU,GACFF,KAAKoB,KAAKlB","file":"../../../providers/html5/html5-lfs-file.js","sourcesContent":["define([\r\n    \"../../utils\",\r\n    '../../preload-file'\r\n], function (utils,PreloadFile) {\r\n    'use strict';\r\n\r\n    const { buffer2ArrayBuffer, arrayBuffer2Buffer } = utils;\r\n\r\n    // A note about getFile and getDirectory options:\r\n    // These methods are called at numerous places in this file, and are passed\r\n    // some combination of these two options:\r\n    //   - create: If true, the entry will be created if it doesn't exist.\r\n    //             If false, an error will be thrown if it doesn't exist.\r\n    //   - exclusive: If true, only create the entry if it doesn't already exist,\r\n    //                and throw an error if it does.\r\n    class Html5LfsFile extends PreloadFile {\r\n        constructor(fs, entry, path, flag, stat, contents) {\r\n            super(fs, path, flag, stat, contents);\r\n            this._entry = entry;\r\n        }\r\n        sync(cb) {\r\n            if (!this.isDirty()) {\r\n                return cb();\r\n            }\r\n            this._entry.createWriter((writer) => {\r\n                const buffer = this.getBuffer();\r\n                const blob = new Blob([buffer2ArrayBuffer(buffer)]);\r\n                const length = blob.size;\r\n                writer.onwriteend = (err) => {\r\n                    writer.onwriteend = null;\r\n                    writer.onerror = null;\r\n                    writer.truncate(length);\r\n                    this.resetDirty();\r\n                    cb();\r\n                };\r\n                writer.onerror = (err) => {\r\n                    cb(convertError(err, this.getPath(), false));\r\n                };\r\n                writer.write(blob);\r\n            });\r\n        }\r\n        close(cb) {\r\n            this.sync(cb);\r\n        }\r\n    }\r\n\r\n\r\n    return Html5LfsFile;\r\n});"]}