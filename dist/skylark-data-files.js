/**
 * skylark-data-files - The skylark file system library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
!function(t,e){var r=e.define,require=e.require,n="function"==typeof r&&r.amd,i=!n&&"undefined"!=typeof exports;if(!n&&!r){var s={};r=e.define=function(t,e,r){"function"==typeof r?(s[t]={factory:r,deps:e.map(function(e){return function(t,e){if("."!==t[0])return t;var r=e.split("/"),n=t.split("/");r.pop();for(var i=0;i<n.length;i++)"."!=n[i]&&(".."==n[i]?r.pop():r.push(n[i]));return r.join("/")}(e,t)}),resolved:!1,exports:null},require(t)):s[t]={factory:null,resolved:!0,exports:r}},require=e.require=function(t){if(!s.hasOwnProperty(t))throw new Error("Module "+t+" has not been defined");var module=s[t];if(!module.resolved){var r=[];module.deps.forEach(function(t){r.push(require(t))}),module.exports=module.factory.apply(e,r)||null,module.resolved=!0}return module.exports}}if(!r)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(t,require){t("skylark-data-files/files",[],function(){}),t("skylark-data-files/action-type",["./files"],function(t){"use strict";var e;return function(t){t[t.NOP=0]="NOP",t[t.THROW_EXCEPTION=1]="THROW_EXCEPTION",t[t.TRUNCATE_FILE=2]="TRUNCATE_FILE",t[t.CREATE_FILE=3]="CREATE_FILE"}(e||(e={})),t.ActionType=e}),t("skylark-data-files/error-codes",["./files"],function(t){"use strict";var e;return function(t){t[t.EPERM=1]="EPERM",t[t.ENOENT=2]="ENOENT",t[t.EIO=5]="EIO",t[t.EBADF=9]="EBADF",t[t.EACCES=13]="EACCES",t[t.EBUSY=16]="EBUSY",t[t.EEXIST=17]="EEXIST",t[t.ENOTDIR=20]="ENOTDIR",t[t.EISDIR=21]="EISDIR",t[t.EINVAL=22]="EINVAL",t[t.EFBIG=27]="EFBIG",t[t.ENOSPC=28]="ENOSPC",t[t.EROFS=30]="EROFS",t[t.ENOTEMPTY=39]="ENOTEMPTY",t[t.ENOTSUP=95]="ENOTSUP"}(e||(e={})),t.ErrorCodes=e}),t("skylark-data-files/error-strings",["./files","./error-codes"],function(t,e){"use strict";const r={};return r[e.EPERM]="Operation not permitted.",r[e.ENOENT]="No such file or directory.",r[e.EIO]="Input/output error.",r[e.EBADF]="Bad file descriptor.",r[e.EACCES]="Permission denied.",r[e.EBUSY]="Resource busy or locked.",r[e.EEXIST]="File exists.",r[e.ENOTDIR]="File is not a directory.",r[e.EISDIR]="File is a directory.",r[e.EINVAL]="Invalid argument.",r[e.EFBIG]="File is too big.",r[e.ENOSPC]="No space left on disk.",r[e.EROFS]="Cannot modify a read-only file system.",r[e.ENOTEMPTY]="Directory is not empty.",r[e.ENOTSUP]="Operation is not supported.",t.ErrorStrings=r}),t("skylark-data-files/file-error",["skylark-langx-binary/buffer","./files","./error-codes","./error-strings"],function(t,e,r,n){"use strict";class i extends Error{constructor(t,e=n[t],i){super(e),this.syscall="",this.errno=t,this.code=r[t],this.path=i,this.stack=(new Error).stack,this.message=`Error: ${this.code}: ${e}${this.path?`, '${this.path}'`:""}`}static fromJSON(t){const e=new i(0);return e.errno=t.errno,e.code=t.code,e.path=t.path,e.stack=t.stack,e.message=t.message,e}static fromBuffer(t,e=0){return i.fromJSON(JSON.parse(t.toString("utf8",e+4,e+4+t.readUInt32LE(e))))}static create(t,e){return new i(t,n[t],e)}static ENOENT(t){return this.create(r.ENOENT,t)}static EEXIST(t){return this.create(r.EEXIST,t)}static EISDIR(t){return this.create(r.EISDIR,t)}static ENOTDIR(t){return this.create(r.ENOTDIR,t)}static EPERM(t){return this.create(r.EPERM,t)}static ENOTEMPTY(t){return this.create(r.ENOTEMPTY,t)}toString(){return this.message}toJSON(){return{errno:this.errno,code:this.code,path:this.path,stack:this.stack,message:this.message}}writeToBuffer(e=t.alloc(this.bufferSize()),r=0){const n=e.write(JSON.stringify(this.toJSON()),r+4);return e.writeUInt32LE(n,r),e}bufferSize(){return 4+t.byteLength(JSON.stringify(this.toJSON()))}}return e.FileError=i}),t("skylark-data-files/base-file",["./files","./error-codes","./file-error"],function(t,e,r){"use strict";return t.BaseFile=class{sync(t){t(new r(e.ENOTSUP))}syncSync(){throw new r(e.ENOTSUP)}datasync(t){this.sync(t)}datasyncSync(){return this.syncSync()}chown(t,n,i){i(new r(e.ENOTSUP))}chownSync(t,n){throw new r(e.ENOTSUP)}chmod(t,n){n(new r(e.ENOTSUP))}chmodSync(t){throw new r(e.ENOTSUP)}utimes(t,n,i){i(new r(e.ENOTSUP))}utimesSync(t,n){throw new r(e.ENOTSUP)}}}),t("skylark-data-files/file-flag",["./files","./error-codes","./file-error","./action-type"],function(t,e,r,n){"use strict";class i{constructor(t){if(this.flagStr=t,i.validFlagStrs.indexOf(t)<0)throw new r(e.EINVAL,"Invalid flag: "+t)}static getFileFlag(t){return i.flagCache.hasOwnProperty(t)?i.flagCache[t]:i.flagCache[t]=new i(t)}getFlagString(){return this.flagStr}isReadable(){return-1!==this.flagStr.indexOf("r")||-1!==this.flagStr.indexOf("+")}isWriteable(){return-1!==this.flagStr.indexOf("w")||-1!==this.flagStr.indexOf("a")||-1!==this.flagStr.indexOf("+")}isTruncating(){return-1!==this.flagStr.indexOf("w")}isAppendable(){return-1!==this.flagStr.indexOf("a")}isSynchronous(){return-1!==this.flagStr.indexOf("s")}isExclusive(){return-1!==this.flagStr.indexOf("x")}pathExistsAction(){return this.isExclusive()?n.THROW_EXCEPTION:this.isTruncating()?n.TRUNCATE_FILE:n.NOP}pathNotExistsAction(){return(this.isWriteable()||this.isAppendable())&&"r+"!==this.flagStr?n.CREATE_FILE:n.THROW_EXCEPTION}}return i.flagCache={},i.validFlagStrs=["r","r+","rs","rs+","w","wx","w+","wx+","a","ax","a+","ax+"],t.FileFlag=i}),t("skylark-data-files/file-type",["./files"],function(t){"use strict";var e;return function(t){t[t.FILE=32768]="FILE",t[t.DIRECTORY=16384]="DIRECTORY",t[t.SYMLINK=40960]="SYMLINK"}(e||(e={})),t.FileType=e}),t("skylark-data-files/stats",["skylark-langx-binary/buffer","./file-type"],function(t,e){"use strict";class r{constructor(t,r,n,i,s,o,c){this.dev=0,this.ino=0,this.rdev=0,this.nlink=1,this.blksize=4096,this.uid=0,this.gid=0,this.fileData=null,this.size=r;let a=0;if("number"!=typeof i&&(a=Date.now(),i=a),"number"!=typeof s&&(a||(a=Date.now()),s=a),"number"!=typeof o&&(a||(a=Date.now()),o=a),"number"!=typeof c&&(a||(a=Date.now()),c=a),this.atimeMs=i,this.ctimeMs=o,this.mtimeMs=s,this.birthtimeMs=c,n)this.mode=n;else switch(t){case e.FILE:this.mode=420;break;case e.DIRECTORY:default:this.mode=511}this.blocks=Math.ceil(r/512),this.mode<4096&&(this.mode|=t)}static fromBuffer(t){const e=t.readUInt32LE(0),n=t.readUInt32LE(4),i=t.readDoubleLE(8),s=t.readDoubleLE(16),o=t.readDoubleLE(24);return new r(61440&n,e,4095&n,i,s,o)}static clone(t){return new r(61440&t.mode,t.size,4095&t.mode,t.atimeMs,t.mtimeMs,t.ctimeMs,t.birthtimeMs)}get atime(){return new Date(this.atimeMs)}get mtime(){return new Date(this.mtimeMs)}get ctime(){return new Date(this.ctimeMs)}get birthtime(){return new Date(this.birthtimeMs)}toBuffer(){const e=t.alloc(32);return e.writeUInt32LE(this.size,0),e.writeUInt32LE(this.mode,4),e.writeDoubleLE(this.atime.getTime(),8),e.writeDoubleLE(this.mtime.getTime(),16),e.writeDoubleLE(this.ctime.getTime(),24),e}isFile(){return(61440&this.mode)===e.FILE}isDirectory(){return(61440&this.mode)===e.DIRECTORY}isSymbolicLink(){return(61440&this.mode)===e.SYMLINK}chmod(t){this.mode=61440&this.mode|t}isSocket(){return!1}isBlockDevice(){return!1}isCharacterDevice(){return!1}isFIFO(){return!1}}return files.Stats=r}),t("skylark-data-files/file-system",["skylark-langx-funcs/defer","skylark-langx-binary/buffer","skylark-langx-paths/path","./files","./error-codes","./file-error","./file-flag","./stats"],function(t,e,r,n,i,s,o,c){"use strict";let a=function(t,e){return t};function f(e,r){if("function"!=typeof e)throw new Error("Callback must be a function.");const n=a(e,r);switch(r){case 1:return function(e){t(function(){return n(e)})};case 2:return function(e,r){t(function(){return n(e,r)})};case 3:return function(e,r,i){t(function(){return n(e,r,i)})};default:throw new Error("Invalid invocation of wrapCb.")}}function l(t){if(t)return t;throw new s(i.EIO,"Initialize BrowserFS with a file system using BrowserFS.initialize(filesystem)")}function h(t,e){switch(typeof t){case"number":return t;case"string":const r=parseInt(t,8);return isNaN(r)?e:r;default:return e}}function u(t){if(t instanceof Date)return t;if("number"==typeof t)return new Date(1e3*t);throw new s(i.EINVAL,"Invalid time.")}function y(t){if(t.indexOf("\0")>=0)throw new s(i.EINVAL,"Path must be a string without null bytes.");if(""===t)throw new s(i.EINVAL,"Path must not be empty.");return r.resolve(t)}function d(t,e,r,n){switch(null===t?"null":typeof t){case"object":return{encoding:void 0!==t.encoding?t.encoding:e,flag:void 0!==t.flag?t.flag:r,mode:h(t.mode,n)};case"string":return{encoding:t,flag:r,mode:n};case"null":case"undefined":case"function":return{encoding:e,flag:r,mode:n};default:throw new TypeError(`"options" must be a string or an object, got ${typeof t} instead.`)}}function p(){}return n.FileSystem=class{constructor(){this.F_OK=0,this.R_OK=4,this.W_OK=2,this.X_OK=1,this.root=null,this.fdMap={},this.nextFd=100}initialize(t){if(!t.constructor.isAvailable())throw new s(i.EINVAL,"Tried to instantiate BrowserFS with an unavailable file system.");return this.root=t}_toUnixTimestamp(t){if("number"==typeof t)return t;if(t instanceof Date)return t.getTime()/1e3;throw new Error("Cannot parse time: "+t)}getRootFS(){return this.root?this.root:null}rename(t,e,r=p){const n=f(r,1);try{l(this.root).rename(y(t),y(e),n)}catch(t){n(t)}}renameSync(t,e){l(this.root).renameSync(y(t),y(e))}exists(t,e=p){const r=f(e,1);try{return l(this.root).exists(y(t),r)}catch(t){return r(!1)}}existsSync(t){try{return l(this.root).existsSync(y(t))}catch(t){return!1}}stat(t,e=p){const r=f(e,2);try{return l(this.root).stat(y(t),!1,r)}catch(t){return r(t)}}statSync(t){return l(this.root).statSync(y(t),!1)}lstat(t,e=p){const r=f(e,2);try{return l(this.root).stat(y(t),!0,r)}catch(t){return r(t)}}lstatSync(t){return l(this.root).statSync(y(t),!0)}truncate(t,e=0,r=p){let n=0;"function"==typeof e?r=e:"number"==typeof e&&(n=e);const o=f(r,1);try{if(n<0)throw new s(i.EINVAL);return l(this.root).truncate(y(t),n,o)}catch(t){return o(t)}}truncateSync(t,e=0){if(e<0)throw new s(i.EINVAL);return l(this.root).truncateSync(y(t),e)}unlink(t,e=p){const r=f(e,1);try{return l(this.root).unlink(y(t),r)}catch(t){return r(t)}}unlinkSync(t){return l(this.root).unlinkSync(y(t))}open(t,e,r,n=p){const i=h(r,420),s=f(n="function"==typeof r?r:n,2);try{l(this.root).open(y(t),o.getFileFlag(e),i,(t,e)=>{e?s(t,this.getFdForFile(e)):s(t)})}catch(t){s(t)}}openSync(t,e,r=420){return this.getFdForFile(l(this.root).openSync(y(t),o.getFileFlag(e),h(r,420)))}readFile(t,e={},r=p){const n=d(e,null,"r",null),c=f(r="function"==typeof e?e:r,2);try{const e=o.getFileFlag(n.flag);return e.isReadable()?l(this.root).readFile(y(t),n.encoding,e,c):c(new s(i.EINVAL,"Flag passed to readFile must allow for reading."))}catch(t){return c(t)}}readFileSync(t,e={}){const r=d(e,null,"r",null),n=o.getFileFlag(r.flag);if(!n.isReadable())throw new s(i.EINVAL,"Flag passed to readFile must allow for reading.");return l(this.root).readFileSync(y(t),r.encoding,n)}writeFile(t,e,r={},n=p){const c=d(r,"utf8","w",420),a=f(n="function"==typeof r?r:n,1);try{const r=o.getFileFlag(c.flag);return r.isWriteable()?l(this.root).writeFile(y(t),e,c.encoding,r,c.mode,a):a(new s(i.EINVAL,"Flag passed to writeFile must allow for writing."))}catch(t){return a(t)}}writeFileSync(t,e,r){const n=d(r,"utf8","w",420),c=o.getFileFlag(n.flag);if(!c.isWriteable())throw new s(i.EINVAL,"Flag passed to writeFile must allow for writing.");return l(this.root).writeFileSync(y(t),e,n.encoding,c,n.mode)}appendFile(t,e,r,n=p){const c=d(r,"utf8","a",420),a=f(n="function"==typeof r?r:n,1);try{const r=o.getFileFlag(c.flag);if(!r.isAppendable())return a(new s(i.EINVAL,"Flag passed to appendFile must allow for appending."));l(this.root).appendFile(y(t),e,c.encoding,r,c.mode,a)}catch(t){a(t)}}appendFileSync(t,e,r){const n=d(r,"utf8","a",420),c=o.getFileFlag(n.flag);if(!c.isAppendable())throw new s(i.EINVAL,"Flag passed to appendFile must allow for appending.");return l(this.root).appendFileSync(y(t),e,n.encoding,c,n.mode)}fstat(t,e=p){const r=f(e,2);try{const e=this.fd2file(t);e.stat(r)}catch(t){r(t)}}fstatSync(t){return this.fd2file(t).statSync()}close(t,e=p){const r=f(e,1);try{this.fd2file(t).close(e=>{e||this.closeFd(t),r(e)})}catch(t){r(t)}}closeSync(t){this.fd2file(t).closeSync(),this.closeFd(t)}ftruncate(t,e,r=p){const n="number"==typeof e?e:0,o=f(r="function"==typeof e?e:r,1);try{const e=this.fd2file(t);if(n<0)throw new s(i.EINVAL);e.truncate(n,o)}catch(t){o(t)}}ftruncateSync(t,e=0){const r=this.fd2file(t);if(e<0)throw new s(i.EINVAL);r.truncateSync(e)}fsync(t,e=p){const r=f(e,1);try{this.fd2file(t).sync(r)}catch(t){r(t)}}fsyncSync(t){this.fd2file(t).syncSync()}fdatasync(t,e=p){const r=f(e,1);try{this.fd2file(t).datasync(r)}catch(t){r(t)}}fdatasyncSync(t){this.fd2file(t).datasyncSync()}write(t,r,n,o,c,a=p){let l,h,u,y=null;if("string"==typeof r){let t="utf8";switch(typeof n){case"function":a=n;break;case"number":y=n,t="string"==typeof o?o:"utf8",a="function"==typeof c?c:a;break;default:return(a="function"==typeof o?o:"function"==typeof c?c:a)(new s(i.EINVAL,"Invalid arguments."))}l=e.from(r,t),h=0,u=l.length}else l=r,h=n,u=o,y="number"==typeof c?c:null,a="function"==typeof c?c:a;const d=f(a,3);try{const e=this.fd2file(t);void 0!==y&&null!==y||(y=e.getPos()),e.write(l,h,u,y,d)}catch(t){d(t)}}writeSync(t,r,n,i,s){let o,c,a,f=0;if("string"==typeof r){a="number"==typeof n?n:null;const t="string"==typeof i?i:"utf8";f=0,o=e.from(r,t),c=o.length}else o=r,f=n,c=i,a="number"==typeof s?s:null;const l=this.fd2file(t);return void 0!==a&&null!==a||(a=l.getPos()),l.writeSync(o,f,c,a)}read(t,r,n,i,s,o=p){let c,a,l,h,u;if("number"==typeof r){l=r,c=n;const t=i;o="function"==typeof s?s:o,a=0,h=e.alloc(l),u=f((e,r,n)=>{if(e)return o(e);o(e,n.toString(t),r)},3)}else h=r,a=n,l=i,c=s,u=f(o,3);try{const e=this.fd2file(t);void 0!==c&&null!==c||(c=e.getPos()),e.read(h,a,l,c,u)}catch(t){u(t)}}readSync(t,r,n,i,s){let o,c,a,f,l=!1,h="utf8";"number"==typeof r?(a=r,f=n,h=i,c=0,o=e.alloc(a),l=!0):(o=r,c=n,a=i,f=s);const u=this.fd2file(t);void 0!==f&&null!==f||(f=u.getPos());const y=u.readSync(o,c,a,f);return l?[o.toString(h),y]:y}fchown(t,e,r,n=p){const i=f(n,1);try{this.fd2file(t).chown(e,r,i)}catch(t){i(t)}}fchownSync(t,e,r){this.fd2file(t).chownSync(e,r)}fchmod(t,e,r){const n=f(r,1);try{const r="string"==typeof e?parseInt(e,8):e;this.fd2file(t).chmod(r,n)}catch(t){n(t)}}fchmodSync(t,e){const r="string"==typeof e?parseInt(e,8):e;this.fd2file(t).chmodSync(r)}futimes(t,e,r,n=p){const i=f(n,1);try{const n=this.fd2file(t);"number"==typeof e&&(e=new Date(1e3*e)),"number"==typeof r&&(r=new Date(1e3*r)),n.utimes(e,r,i)}catch(t){i(t)}}futimesSync(t,e,r){this.fd2file(t).utimesSync(u(e),u(r))}rmdir(t,e=p){const r=f(e,1);try{t=y(t),l(this.root).rmdir(t,r)}catch(t){r(t)}}rmdirSync(t){return t=y(t),l(this.root).rmdirSync(t)}mkdir(t,e,r=p){"function"==typeof e&&(r=e,e=511);const n=f(r,1);try{t=y(t),l(this.root).mkdir(t,e,n)}catch(t){n(t)}}mkdirSync(t,e){l(this.root).mkdirSync(y(t),h(e,511))}readdir(t,e=p){const r=f(e,2);try{t=y(t),l(this.root).readdir(t,r)}catch(t){r(t)}}readdirSync(t){return t=y(t),l(this.root).readdirSync(t)}link(t,e,r=p){const n=f(r,1);try{t=y(t),e=y(e),l(this.root).link(t,e,n)}catch(t){n(t)}}linkSync(t,e){return t=y(t),e=y(e),l(this.root).linkSync(t,e)}symlink(t,e,r,n=p){const o="string"==typeof r?r:"file",c=f(n="function"==typeof r?r:n,1);try{if("file"!==o&&"dir"!==o)return c(new s(i.EINVAL,"Invalid type: "+o));t=y(t),e=y(e),l(this.root).symlink(t,e,o,c)}catch(t){c(t)}}symlinkSync(t,e,r){if(r){if("file"!==r&&"dir"!==r)throw new s(i.EINVAL,"Invalid type: "+r)}else r="file";return t=y(t),e=y(e),l(this.root).symlinkSync(t,e,r)}readlink(t,e=p){const r=f(e,2);try{t=y(t),l(this.root).readlink(t,r)}catch(t){r(t)}}readlinkSync(t){return t=y(t),l(this.root).readlinkSync(t)}chown(t,e,r,n=p){const i=f(n,1);try{t=y(t),l(this.root).chown(t,!1,e,r,i)}catch(t){i(t)}}chownSync(t,e,r){t=y(t),l(this.root).chownSync(t,!1,e,r)}lchown(t,e,r,n=p){const i=f(n,1);try{t=y(t),l(this.root).chown(t,!0,e,r,i)}catch(t){i(t)}}lchownSync(t,e,r){t=y(t),l(this.root).chownSync(t,!0,e,r)}chmod(t,e,r=p){const n=f(r,1);try{const r=h(e,-1);if(r<0)throw new s(i.EINVAL,"Invalid mode.");l(this.root).chmod(y(t),!1,r,n)}catch(t){n(t)}}chmodSync(t,e){const r=h(e,-1);if(r<0)throw new s(i.EINVAL,"Invalid mode.");t=y(t),l(this.root).chmodSync(t,!1,r)}lchmod(t,e,r=p){const n=f(r,1);try{const r=h(e,-1);if(r<0)throw new s(i.EINVAL,"Invalid mode.");l(this.root).chmod(y(t),!0,r,n)}catch(t){n(t)}}lchmodSync(t,e){const r=h(e,-1);if(r<1)throw new s(i.EINVAL,"Invalid mode.");l(this.root).chmodSync(y(t),!0,r)}utimes(t,e,r,n=p){const i=f(n,1);try{l(this.root).utimes(y(t),u(e),u(r),i)}catch(t){i(t)}}utimesSync(t,e,r){l(this.root).utimesSync(y(t),u(e),u(r))}realpath(t,e,r=p){const n="object"==typeof e?e:{},i=f("function"==typeof e?e:p,2);try{t=y(t),l(this.root).realpath(t,n,i)}catch(t){i(t)}}realpathSync(t,e={}){return t=y(t),l(this.root).realpathSync(t,e)}watchFile(t,e,r=p){throw new s(i.ENOTSUP)}unwatchFile(t,e=p){throw new s(i.ENOTSUP)}watch(t,e,r=p){throw new s(i.ENOTSUP)}access(t,e,r=p){throw new s(i.ENOTSUP)}accessSync(t,e){throw new s(i.ENOTSUP)}createReadStream(t,e){throw new s(i.ENOTSUP)}createWriteStream(t,e){throw new s(i.ENOTSUP)}wrapCallbacks(t){a=t}getFdForFile(t){const e=this.nextFd++;return this.fdMap[e]=t,e}fd2file(t){const e=this.fdMap[t];if(e)return e;throw new s(i.EBADF,"Invalid file descriptor.")}closeFd(t){delete this.fdMap[t]}}}),t("skylark-data-files/utils",["skylark-langx-binary/buffer","skylark-langx-paths","./file-error","./error-codes"],function(t,e,r,n){"use strict";const i="undefined"!=typeof navigator&&!(!/(msie) ([\w.]+)/.exec(navigator.userAgent.toLowerCase())&&-1===navigator.userAgent.indexOf("Trident")),s="undefined"==typeof window;function o(t){return t instanceof Uint8Array?t:new Uint8Array(t)}function c(e){return e instanceof t?e:0===e.byteOffset&&e.byteLength===e.buffer.byteLength?a(e.buffer):t.from(e.buffer,e.byteOffset,e.byteLength)}function a(e){return t.from(e)}let f=null;function l(){return f||(f=t.alloc(0))}return{deprecationMessage:function(t,e,r){t&&console.warn(`[${e}] Direct file system constructor usage is deprecated for this file system, and will be removed in the next major version. Please use the '${e}.Create(${JSON.stringify(r)}, callback)' method instead. See https://github.com/jvilk/BrowserFS/issues/176 for more details.`)},isIE:i,isWebWorker:s,fail:function(){throw new Error("BFS has reached an impossible code path; please file a bug.")},mkdirpSync:function t(e,r,n){n.existsSync(e)||(t(path.dirname(e),r,n),n.mkdirSync(e,r))},buffer2ArrayBuffer:function(t){const e=o(t),r=e.byteOffset,n=e.byteLength;return 0===r&&n===e.buffer.byteLength?e.buffer:e.buffer.slice(r,r+n)},buffer2Uint8array:o,arrayish2Buffer:function(e){return e instanceof t?e:e instanceof Uint8Array?c(e):t.from(e)},uint8Array2Buffer:c,arrayBuffer2Buffer:a,copyingSlice:function(t,e=0,r=t.length){if(e<0||r<0||r>t.length||e>r)throw new TypeError(`Invalid slice bounds on buffer of length ${t.length}: [${e}, ${r}]`);if(0===t.length)return l();{const n=o(t),i=t[0],s=(i+1)%255;return t[0]=s,n[0]===s?(n[0]=i,c(n.slice(e,r))):(t[0]=i,c(n.subarray(e,r)))}},emptyBuffer:l,bufferValidator:function(e,i){t.isBuffer(e)?i():i(new r(n.EINVAL,"option must be a Buffer."))},checkOptions:function(t,e,i){const s=t.Options,o=t.Name;let c=0,a=!1,f=!1;function l(t){a||(t&&(a=!0,i(t)),0===--c&&f&&i())}for(const t in s)if(s.hasOwnProperty(t)){const f=s[t],h=e[t];if(void 0===h||null===h){if(!f.optional){const c=Object.keys(e).filter(t=>!(t in s)).map(e=>({str:e,distance:levenshtein(t,e)})).filter(t=>t.distance<5).sort((t,e)=>t.distance-e.distance);if(a)return;return a=!0,i(new r(n.EINVAL,`[${o}] Required option '${t}' not provided.${c.length>0?` You provided unrecognized option '${c[0].str}'; perhaps you meant to type '${t}'.`:""}\nOption description: ${f.description}`))}}else{let e=!1;if(!(e=Array.isArray(f.type)?-1!==f.type.indexOf(typeof h):typeof h===f.type)){if(a)return;return a=!0,i(new r(n.EINVAL,`[${o}] Value provided for option ${t} is not the proper type. Expected ${Array.isArray(f.type)?`one of {${f.type.join(", ")}}`:f.type}, but received ${typeof h}\nOption description: ${f.description}`))}f.validator&&(c++,f.validator(h,l))}}f=!0,0!==c||a||i()}}}),t("skylark-data-files/preload-file",["skylark-langx-binary/buffer","./files","./error-codes","./file-error","./stats","./base-file","./utils"],function(t,e,r,n,i,s,o){"use strict";const{emptyBuffer:c}=o;return files.PreloadFile=class extends s{constructor(t,e,r,n,i){if(super(),this._pos=0,this._dirty=!1,this._fs=t,this._path=e,this._flag=r,this._stat=n,this._buffer=i||c(),this._stat.size!==this._buffer.length&&this._flag.isReadable())throw new Error(`Invalid buffer: Buffer is ${this._buffer.length} long, yet Stats object specifies that file is ${this._stat.size} long.`)}getBuffer(){return this._buffer}getStats(){return this._stat}getFlag(){return this._flag}getPath(){return this._path}getPos(){return this._flag.isAppendable()?this._stat.size:this._pos}advancePos(t){return this._pos+=t}setPos(t){return this._pos=t}sync(t){try{this.syncSync(),t()}catch(e){t(e)}}syncSync(){throw new n(r.ENOTSUP)}close(t){try{this.closeSync(),t()}catch(e){t(e)}}closeSync(){throw new n(r.ENOTSUP)}stat(t){try{t(null,i.clone(this._stat))}catch(e){t(e)}}statSync(){return i.clone(this._stat)}truncate(t,e){try{this.truncateSync(t),this._flag.isSynchronous()&&!fs.getRootFS().supportsSynch()&&this.sync(e),e()}catch(t){return e(t)}}truncateSync(e){if(this._dirty=!0,!this._flag.isWriteable())throw new n(r.EPERM,"File not opened with a writeable mode.");if(this._stat.mtimeMs=Date.now(),e>this._buffer.length){const r=t.alloc(e-this._buffer.length,0);return this.writeSync(r,0,r.length,this._buffer.length),void(this._flag.isSynchronous()&&fs.getRootFS().supportsSynch()&&this.syncSync())}this._stat.size=e;const i=t.alloc(e);this._buffer.copy(i,0,0,e),this._buffer=i,this._flag.isSynchronous()&&fs.getRootFS().supportsSynch()&&this.syncSync()}write(t,e,r,n,i){try{i(null,this.writeSync(t,e,r,n),t)}catch(t){i(t)}}writeSync(e,i,s,o){if(this._dirty=!0,void 0!==o&&null!==o||(o=this.getPos()),!this._flag.isWriteable())throw new n(r.EPERM,"File not opened with a writeable mode.");const c=o+s;if(c>this._stat.size&&(this._stat.size=c,c>this._buffer.length)){const e=t.alloc(c);this._buffer.copy(e),this._buffer=e}const a=e.copy(this._buffer,o,i,i+s);return this._stat.mtimeMs=Date.now(),this._flag.isSynchronous()?(this.syncSync(),a):(this.setPos(o+a),a)}read(t,e,r,n,i){try{i(null,this.readSync(t,e,r,n),t)}catch(t){i(t)}}readSync(t,e,i,s){if(!this._flag.isReadable())throw new n(r.EPERM,"File not opened with a readable mode.");void 0!==s&&null!==s||(s=this.getPos());const o=s+i;o>this._stat.size&&(i=this._stat.size-s);const c=this._buffer.copy(t,e,s,s+i);return this._stat.atimeMs=Date.now(),this._pos=s+i,c}chmod(t,e){try{this.chmodSync(t),e()}catch(t){e(t)}}chmodSync(t){if(!this._fs.supportsProps())throw new n(r.ENOTSUP);this._dirty=!0,this._stat.chmod(t),this.syncSync()}isDirty(){return this._dirty}resetDirty(){this._dirty=!1}}}),t("skylark-data-files/no-sync-file",["./preload-file"],function(t){"use strict";return files.NoSyncFile=class extends t{constructor(t,e,r,n,i){super(t,e,r,n,i)}sync(t){t()}syncSync(){}close(t){t()}closeSync(){}}}),t("skylark-data-files/main",["./files","./action-type","./base-file","./error-codes","./error-strings","./file-error","./file-flag","./file-system","./no-sync-file","./preload-file","./stats"],function(t){return t}),t("skylark-data-files",["skylark-data-files/main"],function(t){return t})}(r),!n){var o=require("skylark-langx-ns");i?module.exports=o:e.skylarkjs=o}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-data-files.js.map
